#!/bin/bash

usage () {
  cat <<-EOF
	Checks whether local LSC files and VOMS server info match.
	Usage:
	  $0 [VO] [--errors|--verbose] [--debug]
	Options:
	  VO        - Check only this Virtual Organisation
	              Default: check LSC files of all VOs.
	  --errors  - Show all errors (LSC mismatches and VOMS server errors)
	              Default: show only LSC mismatches
	  --verbose - Show everything: errors and successes.
	              Default: show only LSC mismatches
	  --debug   - Show HTTPS operations
	EOF
  exit 1
}

# Eye candy. Not all editors may show them properly.
icon_checkmark='✅'
icon_redcross='❌'
icon_question='❓'

# Some default values
VOMSDIR=/etc/grid-security/vomsdir/
dirs="$VOMSDIR/*"
verbose=false
errors=false
debug=false

while [ $# -gt 0 ] ; do
  case "$1" in
    --help | -h | -help )
      usage
      ;;
    --verbose )
      verbose=true
      errors=true
      shift
      ;;
    --errors )
      errors=true
      shift
      ;;
    --debug )
      debug=true
      verbose=true
      errors=true
      shift
      ;;
    --* )
      echo "ERROR: unknow option '$1'"
      usage
      ;;
    * )
      vo="$1"
      dirs="$VOMSDIR/$1"
      shift
      ;;
  esac
done



for dir in $dirs ; do
  $verbose && echo
  vo=$(basename "$dir")
  if [ -z "$(ls -A $dir/*.lsc 2>/dev/null)" ] ; then
    $verbose && echo "$icon_redcross Dir $dir does not contain any LSC files. It can probably be removed."
    continue
  fi
  for lscfile in $dir/*.lsc ; do
    prefix="=== $vo/$(basename "$lscfile") =>"
    # Read local LSC file but filter empty lines and comments
    lsc_file_info=$(grep -v -e '^$' -e '^#' "$lscfile")
    # The LSC file should be at least two lines.
    # An empty LSC file can break dCache! We want to see this!
    if [ -z "$lsc_file_info" ] ; then
      $errors && echo "$prefix $icon_question WARNING: file $lscfile seems to be empty."
      continue
    fi
    # Read LSC info from the VOMS server
    voms_server=$(sed -e 's@.*/@@' -e 's@.lsc@@' <<<"$lscfile")

    # Get the configuration page from the VOMS server.
    if $debug ; then
      echo 1>&2 curl --silent --connect-timeout 10 --location --fail --silent --show-error \
                --capath /etc/grid-security/certificates/ \
                --cert /etc/grid-security/hostcert.pem \
                --key  /etc/grid-security/hostkey.pem \
                "https://${voms_server}:8443/voms/${vo}/configuration/configuration.action"
    fi
    result=$(curl --silent --connect-timeout 10 --location --fail --silent --show-error \
                  --capath /etc/grid-security/certificates/ \
                  --cert /etc/grid-security/hostcert.pem \
                  --key  /etc/grid-security/hostkey.pem \
                  "https://${voms_server}:8443/voms/${vo}/configuration/configuration.action" 2>&1
            )
    # Did curl return an error?
    if grep --silent '^curl:' <<<"$result" ; then
      if $errors ; then
        echo "$prefix $icon_question Could not read from" \
             "https://${voms_server}:8443/voms/${vo}/configuration/configuration.action" \
             " - $result"
      fi
      continue
    fi
    # Get the hostname:portnumber for this VO.
    voms_interface=$(echo "$result" \
                     | grep -A10 VOMSES \
                     | grep configurationInfo \
                     | sed -e 's/<[^>]\+>//g' \
                           -e 's/&quot;//g' \
                     | awk '{print $2":"$3}' \
                    )
    lsc_live_info=$(openssl s_client -connect $voms_interface -nameopt=compat 2>&1 \
                    | grep -e '^subject=' \
                           -e '^issuer=' \
                    | sed -e 's/^subject=//' \
                          -e 's/^issuer=//'
              )
    if [ -z "$lsc_live_info" ] ; then
      $errors && echo "$prefix $icon_question Could not get LSC info from VOMS server at $voms_interface."
      continue
    fi

    # We got info from the VOMS server. Let's compare!
    diff=$(diff <(echo -e "$lsc_file_info") <(echo -e "$lsc_live_info") )
    if [ -n "$diff" ] ; then
      echo "$prefix $icon_redcross LSC info does not match."
      {
        echo "== $lscfile =="
        echo "$lsc_file_info"
        echo "== $voms_interface =="
        echo "$lsc_live_info"
      } | sed -e 's@^/@  /@' -e 's/^/  /'
    else
      $verbose && echo "$prefix $icon_checkmark OK"
    fi 
  done
done
